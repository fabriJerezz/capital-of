# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Task Development CI

on:
  pull_request:
    branches: [ "main", "dev" ]
    types: ["opened", "synchronize"]

jobs:

  build-and-tests:
    runs-on: ubuntu-latest
    steps:
    # reusable actions that the job uses
    - uses: actions/checkout@v4

    # This is where I would install dependencies if there were any

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Build
      run: go build -v ./...

    - name: Run business logic tests
      run: go test -v ./utils

    - name: Run api tests
      run: go test -v ./api

   
  feedback:
    runs-on: ubuntu-latest
    steps:
    - name: Notificación éxito pull request abierta
      if: success() && github.event_name == 'pull_request' && github.event.action == 'opened'
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        payload: |
          {
            "text": "Todo salió bien! :partying_face: \n ${{ github.actor }} abrió una pr *${{ github.event.pull_request.title }}* desde `${{ github.event.pull_request.head.ref }}` hacia `${{ github.event.pull_request.base.ref }}`"
          }
    - name: Notificación éxito cambio a pr abierta
      if: success() && github.event_name == 'pull_request' && github.event.action == 'synchronize'
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        payload: |
          {
            "text": "Todo salió bien! :partying_face: \n ${{ github.actor }} hizo un cambio en la pr *${{ github.event.pull_request.title }}* desde `${{ github.event.pull_request.head.ref }}` hacia `${{ github.event.pull_request.base.ref }}`"
          }
    - name: Notificación error pull request
      if: failure() && github.event_name == 'pull_request' && github.event.action == 'opened'
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        payload: |
          {
            "text": "No salió como esperabamos :confused: \n ${{ github.actor }} abrió una pr *${{ github.event.pull_request.title }}* desde `${{ github.event.pull_request.head.ref }}` hacia `${{ github.event.pull_request.base.ref }}`"
          }
    - name: Notificación error cambio a pr abierta
      if: failure() && github.event_name == 'pull_request' && github.event.action == 'synchronize'
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        payload: |
          {
            "text": "No salió como esperabamos :confused: \n ${{ github.actor }} hizo un cambio en la pr *${{ github.event.pull_request.title }}* desde `${{ github.event.pull_request.head.ref }}` hacia `${{ github.event.pull_request.base.ref }}`"
          }

    
